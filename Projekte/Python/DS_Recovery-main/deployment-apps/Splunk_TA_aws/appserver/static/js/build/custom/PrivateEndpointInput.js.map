{"version":3,"file":"PrivateEndpointInput.js","sources":["../../../../../../../build-ui/js/PrivateEndpointInput.js"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2021 Splunk, Inc. <sales@splunk.com>\n * SPDX-License-Identifier: LicenseRef-Splunk-8-2021\n *\n */\n\nimport { template } from 'underscore'\nimport $ from 'jquery'\nimport CheckBoxTemplate from '../html/PrivateEndpointTemplate.html'\nimport '../stylesheets/PrivateEndpointInput.css'\n\nconst InputServiceMapping = {\n  aws_private_account: ['sts'],\n  aws_sqs_based_s3: ['sqs', 's3', 'sts'],\n  aws_cloudtrail: ['sqs', 's3', 'sts'],\n  aws_cloudwatch_logs: ['logs', 'sts'],\n  aws_kinesis: ['kinesis', 'sts'],\n  aws_cloudwatch: ['sts', 'monitoring', 'elb', 'ec2', 'autoscaling', 'lambda', 's3']\n}\n\nclass PrivateEndpointInput {\n  /**\n     *\n     * @constructor\n     * @param {Object} globalConfig - Global configuration.\n     * @param {element} el - The element of the custom row.\n     * @param {string} data - Service name.\n     * @param {object} util - the utility object\n     * @param {function} setValue - set value of the custom field\n     */\n  constructor (globalConfig, el, data, setValue, util) {\n    this.globalConfig = globalConfig\n    this.el = el\n    this.data = data\n    this.util = util\n    this.setValue = setValue\n    this.endpoint_inputs = InputServiceMapping[this.data.serviceName] || ['s3', 'sts']\n  }\n\n  render () {\n    this.el.innerHTML = this._RenderTemplate()\n    $('input#private-endpoint-checkbox').on('change', () => this._onCheckBoxChange())\n    return this\n  }\n\n  _RenderTemplate () {\n    const PrivateEndpointEnabled = parseInt(this.data.value)\n    if (PrivateEndpointEnabled) {\n      for (const service of this.endpoint_inputs) {\n        this._setVisibility(service, true)\n      }\n      return template(CheckBoxTemplate)({ checked: 'checked' })\n    } else {\n      return template(CheckBoxTemplate)({ checked: '' })\n    }\n  }\n\n  _onCheckBoxChange () {\n    const status = $('input#private-endpoint-checkbox').is(':checked')\n    const value = status ? 1 : 0\n    this.setValue(value)\n    for (const service of this.endpoint_inputs) {\n      this._setVisibility(service, status)\n    }\n  }\n\n  _setVisibility (service, value) {\n    const key = `${service}_private_endpoint_url`\n    this.util.setState((prevState) => {\n      const data = { ...prevState.data }\n      data[key].display = value\n      return { data }\n    })\n  }\n}\n\nexport default PrivateEndpointInput\n"],"names":["InputServiceMapping","aws_private_account","aws_sqs_based_s3","aws_cloudtrail","aws_cloudwatch_logs","aws_kinesis","aws_cloudwatch","PrivateEndpointInput","globalConfig","el","data","setValue","util","endpoint_inputs","this","serviceName","innerHTML","_RenderTemplate","$","on","_this","_onCheckBoxChange","parseInt","value","service","_setVisibility","template","CheckBoxTemplate","checked","status","is","key","setState","prevState","display"],"mappings":"8sBAWMA,EAAsB,CAC1BC,oBAAqB,CAAC,OACtBC,iBAAkB,CAAC,MAAO,KAAM,OAChCC,eAAgB,CAAC,MAAO,KAAM,OAC9BC,oBAAqB,CAAC,OAAQ,OAC9BC,YAAa,CAAC,UAAW,OACzBC,eAAgB,CAAC,MAAO,aAAc,MAAO,MAAO,cAAe,SAAU,OAGzEC,wBAUSC,EAAcC,EAAIC,EAAMC,EAAUC,kBACxCJ,aAAeA,OACfC,GAAKA,OACLC,KAAOA,OACPE,KAAOA,OACPD,SAAWA,OACXE,gBAAkBb,EAAoBc,KAAKJ,KAAKK,cAAgB,CAAC,KAAM,uCAG9E,kCACON,GAAGO,UAAYF,KAAKG,kBACzBC,EAAE,mCAAmCC,GAAG,UAAU,kBAAMC,EAAKC,uBACtDP,oCAGT,cACiCQ,SAASR,KAAKJ,KAAKa,OACtB,WACJT,KAAKD,gDAAiB,KAAjCW,eACJC,eAAeD,GAAS,yCAExBE,EAASC,EAATD,CAA2B,CAAEE,QAAS,mBAEtCF,EAASC,EAATD,CAA2B,CAAEE,QAAS,sCAIjD,eACQC,EAASX,EAAE,mCAAmCY,GAAG,YACjDP,EAAQM,EAAS,EAAI,OACtBlB,SAASY,aACQT,KAAKD,gDAAiB,KAAjCW,eACJC,eAAeD,EAASK,iEAIjC,SAAgBL,EAASD,OACjBQ,YAASP,gCACVZ,KAAKoB,UAAS,SAACC,OACZvB,OAAYuB,EAAUvB,aAC5BA,EAAKqB,GAAKG,QAAUX,EACb,CAAEb,KAAAA"}