{"version":3,"file":"CustomMenu.js","sources":["../../../../../../../build-ui/js/components/CustomDropdown.jsx","../../../../../../../build-ui/js/CustomMenu.js"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2021 Splunk, Inc. <sales@splunk.com>\n * SPDX-License-Identifier: LicenseRef-Splunk-8-2021\n *\n */\n\nimport React, { Component } from 'react';\nimport Menu from '@splunk/react-ui/Menu';\nimport Button from '@splunk/react-ui/Button';\nimport Dropdown from '@splunk/react-ui/Dropdown';\nimport { SplunkThemeProvider } from '@splunk/themes';\nimport ChevronLeft from '@splunk/react-icons/ChevronLeft';\nimport SlidingPanels from '@splunk/react-ui/SlidingPanels';\n\nimport { ThemeProviderSettings } from '../styles/Theme';\nimport { getServices } from '../utils/GlobalConfigUtil';\nimport { getMockService } from '../configs/SourceInput';\n\nconst TWO_LEVEL = {\n    'billing': {\n        'aws_billing_cur': 'Billing (Cost and Usage Report)',\n        'aws_billing': 'Billing (Legacy)'\n    },\n    'aws_cloudtrail': {\n        'aws_sqs_based_s3': 'SQS-Based S3',\n        'aws_cloudtrail': 'CloudTrail',\n        'aws_s3': 'Generic S3',\n        'splunk_ta_aws_logs': 'Incremental S3'\n    },\n    'aws_config': {\n        'aws_sqs_based_s3': 'SQS-Based S3',\n        'aws_config': 'Config'\n    },\n    'aws_description': {\n        'aws_metadata': 'Metadata (Boto3)',\n        'aws_description': 'Description (Boto2)'\n    },\n    'vpc_flow_logs': {\n        'aws_kinesis': 'Kinesis',\n        'aws_cloudwatch_logs': 'CloudWatch Logs'\n    },\n    's3_access_logs': {\n        'aws_sqs_based_s3': 'SQS-Based S3',\n        'aws_s3': 'Generic S3',\n        'splunk_ta_aws_logs': 'Incremental S3'\n    },\n    'cloudfront_access_logs': {\n        'aws_sqs_based_s3': 'SQS-Based S3',\n        'aws_s3': 'Generic S3',\n        'splunk_ta_aws_logs': 'Incremental S3'\n    },\n    'elb_access_logs': {\n        'aws_sqs_based_s3': 'SQS-Based S3',\n        'aws_s3': 'Generic S3',\n        'splunk_ta_aws_logs': 'Incremental S3'\n    },\n    'others': {\n        'aws_cloudwatch_logs': 'CloudWatch Logs',\n        'aws_s3': 'Generic S3',\n        'aws_kinesis': 'Kinesis',\n        'splunk_ta_aws_sqs': 'SQS',\n        'aws_sqs_based_s3': 'SQS-Based S3'\n    }\n};\n\nconst INPUTS = ['aws_metadata', 'aws_billing', 'aws_billing_cur', 'aws_s3', 'aws_sqs_based_s3', 'splunk_ta_aws_logs', 'aws_cloudwatch_logs', 'splunk_ta_aws_sqs', 'aws_kinesis'];\n\nclass CustomDropdown extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            services: {},\n            activePanelId: 'one',\n            transition: 'forward',\n            selectedMenu: '',\n            open: false\n        };\n    }\n\n    componentDidMount() {\n        let services = {};\n        const { globalConfig } = this.props;\n        getServices(globalConfig).forEach((service) => {\n            services[service.name] = service.title;\n        });\n        this.setState({services, open: false});\n    }\n\n    getMenuOptions = () => {\n        let allService = Object.assign(this.state.services, getMockService());\n        const mainMenuHTML = Object.keys(allService)\n            .filter(key => INPUTS.indexOf(key) === -1)\n            .sort((a, b) => {\n                a = allService[a];\n                b = allService[b];\n                if (a === getMockService()['others']) {\n                    return 1;\n                } else if (b === getMockService()['others']) {\n                    return -1;\n                } else {\n                    return a > b ? 1 : -1;\n                }\n            })\n            .map(key => {\n                let arrow = key in TWO_LEVEL ? true : false;\n                let input = key in TWO_LEVEL ? '' : key;\n                let title = allService[key];\n                return (\n                    <Menu.Item \n                        className=\"def\" \n                        data-service={key} \n                        data-input={input} \n                        hasSubmenu={arrow} \n                        onClick={(e) => this.goForward(e, key, arrow)}>\n                            {title}\n                    </Menu.Item>\n                );\n            });\n        return mainMenuHTML;\n    }\n\n    handleSubMenuOptions = () => {\n        const service = this.state.selectedMenu;\n        let services = TWO_LEVEL[service];\n        let html = Object.keys(services).map((key, index) => {\n            let recomm = '';\n            if (index === 0 && service !== 'others') {\n                recomm = <span className=\"menu-recomm\">(Recommended)</span>;\n            }\n            return (\n                <Menu.Item\n                    data-service={service}\n                    data-input={key}\n                    onClick={(e) => this.onSelectInput(e)}>\n                        {services[key]}{recomm}\n                </Menu.Item>\n            );\n        });\n        return html;\n    }\n\n    onSelectInput = (event) => {\n        // In UI, the input decides which service to use. So the `service` and `input` are swapped here.\n        let service = $(event.currentTarget).data('input');\n        let input = $(event.currentTarget).data('service');\n\n        if (!input) {\n            event.preventDefault();\n            return;\n        }\n\n        $('[data-test=\"layer-container\"] [data-test=\"layer\"]>div').remove();\n\n        this.props.navigator({\n            service,\n            input,\n            action: 'create'\n        });\n    }\n\n    goBack = () => {\n        this.setState((state) => ({\n            activePanelId: state.activePanelId === 'one' ? 'two' : 'one',\n            transition: 'backward',\n            selectedMenu: ''\n        }));\n    };\n\n    goForward = (event, name, isChild) => {\n        if (isChild) {\n            this.setState((state) => ({\n                activePanelId: state.activePanelId === 'one' ? 'two' : 'one',\n                transition: 'forward',\n                selectedMenu: name\n            }));\n        } else {\n            this.onSelectInput(event);\n        }\n    };\n\n    render() {\n        if (!this.state.services) return 'Loading...';\n\n        const mainMenuHTML = this.getMenuOptions();\n\n        const toggle = <Button \n                            className=\"asasa\"\n                            appearance=\"toggle\"\n                            label=\"Create New Input\"\n                            onClick={() => this.setState({open: true})}\n                            isMenu />;\n\n        const { activePanelId, transition } = this.state;\n        let closeReasons = ['clickAway', 'escapeKey', 'offScreen', 'toggleClick'];\n\n        let subMenuHTML = null;\n        if (this.state.activePanelId == 'two' && this.state.selectedMenu) {\n            subMenuHTML = this.handleSubMenuOptions()\n        }\n\n        return (\n            <SplunkThemeProvider {...ThemeProviderSettings}>\n                <Dropdown closeReasons={closeReasons} toggle={toggle}>\n                    <div style={{ width: 200 }}>\n                        <SlidingPanels activePanelId={activePanelId} transition={transition}>\n                            <SlidingPanels.Panel key=\"one\" panelId=\"one\">\n                                <Menu.Heading title>Data Type</Menu.Heading>\n                                <Menu >\n                                    {mainMenuHTML}\n                                </Menu>\n                            </SlidingPanels.Panel>\n                            <SlidingPanels.Panel key=\"two\" panelId=\"two\">\n                                <Menu style={{ width: 200 }}>\n                                    <Menu.Item icon={<ChevronLeft />} onClick={this.goBack}>\n                                        Back\n                                    </Menu.Item>\n                                    <Menu.Heading title>Input Type</Menu.Heading>\n                                    <Menu.Divider />\n                                    {subMenuHTML}\n                                </Menu>\n                            </SlidingPanels.Panel>\n                        </SlidingPanels>\n                    </div>\n                </Dropdown>\n            </SplunkThemeProvider>\n        );\n    }\n}\n\nexport default CustomDropdown;\n","/*\n * SPDX-FileCopyrightText: 2021 Splunk, Inc. <sales@splunk.com>\n * SPDX-License-Identifier: LicenseRef-Splunk-8-2021\n *\n */\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport CustomDropdown from './components/CustomDropdown'\nimport '../stylesheets/CustomMenu.css'\n\n/**\n * Custom Menu\n * @constructor\n * @param {Object} globalConfig - Global configuration.\n * @param {element} target - Target element to hover.\n * @param {object} navigator - Navigator method to navigate page. navigator(params)\n */\n\nclass CustomMenu {\n  constructor (globalConfig, target, navigator) {\n    this.globalConfig = globalConfig\n    this.el = target\n    this.navigator = navigator\n\n    // For adding Ad banner for Cloud Data Manager of Splunk, in Input page description.\n    jQuery(function ($) {   // eslint-disable-line\n      // As text & css is tightly dependent, keep it inline.\n      $('div.pageSubtitle').html('<div class=\"tool-description\"><p style=\"margin: 0px;\"> Create data inputs to collect data from AWS </p> <hr style=\"width: 270px;margin-left: 0px;\"> <p style=\"margin:5px\"> Ingesting data from AWS to Splunk Cloud? Have you tried the new Splunk Data Manager yet? <br> Data Manager makes AWS data ingestion simpler, more automated and centrally managed for you, while co-existing with AWS and/or Kinesis TAs.<br>Read our <a target=\"_blank\" href=\"https://splk.it/31oy2b2\">blog post</a> to learn more about Data Manager and it\\'s availability on your Splunk Cloud instance. </p><hr style=\"width: 646px;margin-left: 0px;\"> </div>')\n    })\n  }\n\n  render () {\n    this.el.innerHTML = '<div id=\"custom-menu\"></div>'\n    ReactDOM.render(\n      <CustomDropdown globalConfig={this.globalConfig} navigator={this.navigator} />,\n      document.getElementById('custom-menu')\n    )\n    return this\n  }\n}\n\nexport default CustomMenu\n"],"names":["TWO_LEVEL","INPUTS","CustomDropdown","props","allService","Object","assign","_this","state","services","getMockService","keys","filter","key","indexOf","sort","a","b","map","arrow","input","title","React","Menu","Item","className","hasSubmenu","onClick","e","goForward","service","selectedMenu","index","recomm","onSelectInput","event","$","currentTarget","data","remove","navigator","action","preventDefault","setState","activePanelId","transition","name","isChild","open","globalConfig","this","getServices","forEach","mainMenuHTML","getMenuOptions","toggle","Button","appearance","label","_this2","isMenu","subMenuHTML","handleSubMenuOptions","SplunkThemeProvider","ThemeProviderSettings","Dropdown","closeReasons","style","width","SlidingPanels","Panel","panelId","Heading","icon","ChevronLeft","goBack","Divider","Component","CustomMenu","target","el","jQuery","html","innerHTML","ReactDOM","render","document","getElementById"],"mappings":"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"}